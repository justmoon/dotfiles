#!/bin/bash

# Catch Ctrl+C (SIGINT) and exit cleanly
trap "echo -e '\nExiting...'; exit 0" SIGINT

wait_for_enter() {
	echo -e "\033[1mWaiting to run: \033[32m$COMMAND\033[0m"
	echo
	read -p $'\033[0;1m<\033[34mENTER\033[0;1m> to run, <\033[34mCTRL+C\033[0;1m> to exit\033[0m '
}

# Parse flags
while [[ "$#" -gt 0 ]]; do
	case "$1" in
	--suspend)
		SUSPEND=true
		shift
		;;
	--once)
		ONCE=true
		shift
		;;
	--) # Stop parsing arguments
		shift
		break
		;;
	-*)
		echo "Unknown option: $1"
		exit 1
		;;
	*)
		break # Start of the command, so exit loop
		;;
	esac
done

# Ensure a command was passed
if [ $# -eq 0 ]; then
	echo "Please provide a command to run."
	exit 1
fi

COMMAND="$@"

if [ "$SUSPEND" = "true" ]; then
	clear
	wait_for_enter
fi

while :; do
	clear

	echo -e "\033[1mRunning: \033[1;32m$COMMAND\033[0m\n" # \033[94m is blue text
	eval "$COMMAND"
	EXIT_STATUS=$?

	if [ $EXIT_STATUS -eq 0 ]; then
		echo -e "\n\033[32m[Exit Status: $EXIT_STATUS]\033[0m\n"
	else
		echo -e "\n\033[31m[Exit Status: $EXIT_STATUS]\033[0m\n"
	fi

	if [ "$ONCE" = "true" ]; then
		break
	fi

	wait_for_enter
done
